version: "3.11"

services:
  pgdb:
    image: postgres
    restart: always
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./pgdbdata:/var/lib/postgresql/data/
  redis:
    image: redis
    restart: always

  backend:
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8777:8777"
    volumes:
      - ./backend/core/media-api:/backend/core/media-api
      - ./backend/core/db.sqlite3:/backend/core/db.sqlite3
    env_file:
      - ./.env
    command: bash -c "cd core && python manage.py migrate && python manage.py createsu && daphne -b 0.0.0.0 -p 8777 core.asgi:application -v2"
    depends_on:
      - pgdb
      - redis

  worker:
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/core/media-api:/backend/core/media-api
    command: ["celery", "--workdir=./core", "-A", "core", "worker"]
    depends_on:
      - backend

  flower:
    image: mher/flower
    ports:
      - "8778:5555"
    volumes:
      - ./worker_wait.sh:/worker_wait.sh
    command: ["sh","/worker_wait.sh"]
    depends_on:
      - worker

  nginx:
    image: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/core/django-static:/django-static
      - ./backend/core/media-api:/media-api
      - ./frontend/build:/build
    depends_on:
      - backend

