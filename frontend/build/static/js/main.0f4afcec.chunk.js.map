{"version":3,"sources":["components/Header/Header.module.scss","components/TopLeftCard/TopLeftCard.module.scss","components/Header/Header.js","api/api.js","pages/TestPage.js","assets/icons/DashboardIcon.js","components/LeftMenu/LeftMenu.js","App.js","reportWebVitals.js","index.js","components/TopRigthCard/TopRigthCard.module.scss","components/LeftMenu/LeftMenu.module.scss","pages/TestPage.module.scss"],"names":["module","exports","Header","_jsx","className","styles","parent","apiMainGet","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","url","serverData","options","answer","status","statusText","ans","_args3","arguments","wrap","_context3","prev","next","length","undefined","error","isError","errorText","data","method","headers","Accept","mode","fetch","sent","_objectSpread","json","t0","message","abrupt","stop","apply","defEvent","darkTheme","createTheme","palette","styled","DataGrid","width","backgroundColor","borderRadius","_useState","useState","_useState2","_slicedToArray","setDataEvents","_useState3","_useState4","setCountRows","_useState5","_useState6","setPrevLink","_useState7","_useState8","setNextLink","_useState9","_useState10","setCurrentLink","_useState11","_useState12","setIsLoad","_useState13","_useState14","_useState15","_useState16","setSelected","_useState17","_useState18","reloadPage","setReloadPage","getLink","concat","useEffect","getEvents","then","_ref","count","previous","results","console","log","newData","map","item","dataTime","input_datetime","split","firstDate","Date","date","toLocaleDateString","slice","rightDateTime","audioRef","useRef","nameRef","_useState19","_useState20","recordedData","setRecordedData","_useState21","_useState22","recordStart","setRecordStart","handleStop","recordedBlob","blob","_jsxs","style","height","marginLeft","children","display","ThemeProvider","theme","flexDirection","borderRight","App","onSubmit","e","preventDefault","formData","FormData","append","current","files","value","ref","type","name","placeholder","required","accept","ReactMic","record","onStop","onData","strokeColor","onClick","controls","src","URL","createObjectURL","DashboardIcon","_ref$width","_ref$height","_ref$fill","fill","viewBox","xmlns","d","stroke","strokeWidth","LeftMenu","navigate","useNavigate","selected","hovered","setHovered","isTG","setTG","timeout","setTimeout","window","location","replace","clearTimeout","icons","id","icon","Dashboard","path","bricks","index","color","IconButton","brick","onMouseEnter","handleHoveredItem","onMouseLeave","tSelected","pathName","handleSelectedItem","BrowserRouter","Routes","Route","element","TestPage","Navigate","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qB,sBCAzDD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,OAAS,4BAA4B,WAAa,gCAAgC,OAAS,4BAA4B,OAAS,4B,mMC2ExKC,EAzEA,WAqCd,OACCC,cAAA,OAAKC,UAAWC,IAAOC,QAiCzB,E,gFCpBaC,EAAU,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAX,cAAAY,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAexB,OAf+BZ,EAAGO,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,GAChCN,EAAa,CAClBK,IAAK,CAAEF,OAAQ,KAAMC,WAAY,IACjCU,MAAO,CAAEC,SAAS,EAAOC,UAAW,IACpCC,KAAM,IAIDhB,EAAU,CACfiB,OAAQ,MACRC,QAAS,CACR,eAAgB,mBAChBC,OAAQ,oBAETC,KAAM,QACNZ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGqBW,MAAMvB,EAAKE,GAAS,KAAD,EAKQ,OAL1CC,EAAMO,EAAAc,KAEJpB,EAAuBD,EAAvBC,OAAQC,EAAeF,EAAfE,WACRC,EAAQL,EAARK,IAERL,EAAWK,IAAGmB,wBAAA,GAAQnB,GAAG,IAAEF,SAAQC,eAAaK,EAAAE,KAAA,GAExBT,EAAOuB,OAAO,KAAD,GAArCzB,EAAWiB,KAAIR,EAAAc,KAAAd,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,SAEfT,EAAWc,MAAQ,CAAEC,SAAS,EAAMC,UAAWP,EAAAiB,GAAMC,SAAU,eAAAlB,EAAAmB,OAAA,SAGzD5B,GAAU,yBAAAS,EAAAoB,OAAA,GAAA/B,EAAA,mBACjB,kBA/BsB,OAAAJ,EAAAoC,MAAA,KAAAvB,UAAA,K,mCC3CjBwB,EAAW,CAChB,GAAM,EACN,eAAkB,6BAClB,YAAe,KACf,oBAAuB,KACvB,iBAAoB,KACpB,aAAe,EACf,SAAY,KACZ,KAAQ,EACR,OAAU,GACV,WAAc,EACd,YAAe,CACd,EAAK,EACL,EAAK,EACL,MAAS,EACT,OAAU,GAEX,eAAkB,EAClB,sBAAyB,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,KAC9E,OAAU,gEACV,MAAS,gEACT,aAAgB,GAChB,SAAY,GAGPC,EAAYC,YAAY,CAC7BC,QAAS,CACRb,KAAM,UAuBO,GAnBQc,YAAOC,IAAPD,EAAiB,iBAAO,CAC9C,wBAAyB,CACxBE,MAAO,OAER,8BAA+B,CAC9BC,gBAAiB,OACjBC,aAAc,OAEf,IAWc,WACd,IAAAC,EAAoCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BI,GAAFF,EAAA,GAAeA,EAAA,IAChCG,EAAkCJ,mBAAS,GAAEK,EAAAH,YAAAE,EAAA,GAA3BE,GAAFD,EAAA,GAAcA,EAAA,IAC9BE,EAAgCP,mBAAS,IAAGQ,EAAAN,YAAAK,EAAA,GAA3BE,GAAFD,EAAA,GAAaA,EAAA,IAC5BE,EAAgCV,mBAAS,IAAGW,EAAAT,YAAAQ,EAAA,GAA3BE,GAAFD,EAAA,GAAaA,EAAA,IAC5BE,EAAsCb,mBAAS,IAAGc,EAAAZ,YAAAW,EAAA,GAA9BE,GAAFD,EAAA,GAAgBA,EAAA,IAClCE,EAA4BhB,oBAAS,GAAMiB,EAAAf,YAAAc,EAAA,GAA5BE,GAAFD,EAAA,GAAWA,EAAA,IACxBE,EAAsCnB,mBAAS,GAAEoB,EAAAlB,YAAAiB,EAAA,GACjDE,GADkBD,EAAA,GAAgBA,EAAA,GACFpB,mBAASV,IAASgC,EAAApB,YAAAmB,EAAA,GAAjCE,GAAFD,EAAA,GAAaA,EAAA,IAC5BE,EAAoCxB,oBAAS,GAAMyB,EAAAvB,YAAAsB,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAK1BG,EAAO,UAAAC,OAHM,eAGiB,mBAGpCC,qBAAU,WACTC,EAAUH,GAEVV,GAAU,GACVS,GAAc,EACf,GAAG,CAACD,IAEJ,IAAMK,EAAY,WAAe,IAAdzE,EAAGQ,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAG,GACxBd,EAAWM,GAAK0E,MAAK,SAAAC,GAAsB,IAAnBzD,EAAIyD,EAAJzD,KACvB,IADkCyD,EAAL5D,MACnBC,QAAV,CAEA,IAAQJ,EAAmCM,EAAnCN,KAAMgE,EAA6B1D,EAA7B0D,MAAOC,EAAsB3D,EAAtB2D,SAAUC,EAAY5D,EAAZ4D,QAE/BC,QAAQC,IAAIF,GACZ,IAAMG,EAAUH,EAAQI,KAAI,SAAAC,GAC3B,IACMC,EADqBD,EAAnBE,eACwBC,MAAM,KAChCC,EAAY,IAAIC,KAAKJ,EAAS,IAC9BK,EAAI,GAAAlB,OAAMgB,EAAUG,qBAAoB,KAAAnB,OAAIa,EAAS,GAAGO,MAAM,EAAG,IACvE,OAAAlE,wBAAA,GAAa0D,GAAI,IAAES,cAAeH,GACnC,IAEA5C,EAAcoC,GACdjC,EAAa4B,GACbzB,EAAY0B,GACZvB,EAAY1C,GAEZgD,GAAU,GACVH,EAAezD,GACfiE,EAAYgB,EAAQ,GApBK,CAqB1B,GACD,EA2BMY,EAAWC,mBACXC,EAAUD,mBAwBhBE,EAAwCtD,mBAAS,MAAKuD,EAAArD,YAAAoD,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAsC1D,oBAAS,GAAM2D,EAAAzD,YAAAwD,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAW5BG,EAAa,SAACC,GACnB1B,QAAQC,IAAI,qBACZuB,GAAe,GACfJ,EAAgBM,EAAaC,KAC9B,EAuBA,OACCC,eAAA,OAAKC,MAAO,CAAErE,gBAAiB,UAAWsE,OAAQ,OAAQvE,MAAO,oBAAqBwE,WAAY,IAAKC,SAAA,CACtGzH,cAACD,EAAM,IAEPC,cAAA,OAAKsH,MAAO,CAACtE,MAAO,mBAAoBuE,OAAQ,oBAAqBG,QAAS,QAAQD,SACrFJ,eAACM,IAAa,CAACC,MAAOjF,EAAU8E,SAAA,CAC/BJ,eAAA,OAAKC,MAAO,CAACtE,MAAO,MAAOuE,OAAQ,OAAQG,QAAS,OAAQG,cAAe,UAAUJ,SAAA,CACpFzH,cAAA,OAAKsH,MAAO,CAACtE,MAAO,OAAQuE,OAAQ,MAAOO,YAAa,qBAAqBL,SAI5EzH,cAAA,OAAKC,UAAWC,IAAO6H,IAAIN,SAC1BJ,eAAA,QAAMW,SAzEY,SAACC,GACzBA,EAAEC,iBAIF,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAAS9B,EAAS+B,QAAQC,MAAM,IAChDJ,EAASE,OAAO,OAAQ5B,EAAQ6B,QAAQE,OAGxC/C,QAAQC,IAAIyC,EASb,EAsDwCV,SAAA,CAChCzH,cAAA,SAAOyI,IAAKhC,EAASiC,KAAK,OAAOC,KAAK,OAAOC,YAAY,YAAYC,UAAQ,IAC7E7I,cAAA,SAAOyI,IAAKlC,EAAUmC,KAAK,OAAOC,KAAK,QAAQG,OAAO,UAAUD,UAAQ,IACxE7I,cAAA,SAAO0I,KAAK,SAASF,MAAM,kBAM9BnB,eAAA,OAAKpH,UAAWC,IAAO6I,SAAUzB,MAAO,CAACtE,MAAO,OAAQuE,OAAQ,OAAOE,SAAA,CAEtEzH,cAAC+I,WAAQ,CACRC,OAAQhC,EACRiC,OAAQ/B,EACRgC,OA9DY,SAAC/B,GACnB1B,QAAQC,IAAI,+BAAgCyB,EAC7C,EA6DOgC,YAAY,UACZlG,gBAAgB,YAEjBjD,cAAA,UAAQoJ,QA9DM,WACnB3D,QAAQC,IAAI,qBACZuB,GAAe,EAChB,EA2DmCQ,SAAC,oBAC9BzH,cAAA,UAAQoJ,QAASlC,EAAWO,SAAC,mBAC7BzH,cAAA,UAAQoJ,QArDK,WAClB3D,QAAQC,IAAIkB,EAkBb,EAkCkCa,SAAC,eAI5Bb,GACA5G,cAAA,OAAAyH,SACCzH,cAAA,SAAOqJ,UAAQ,EAACC,IAAKC,IAAIC,gBAAgB5C,aAyB7CS,eAAA,OAAKC,MAAO,CAACtE,MAAO,MAAOuE,OAAQ,OAAQG,QAAS,OAAQG,cAAe,UAAUJ,SAAA,CACpFzH,cAAA,OAAKsH,MAAO,CAACtE,MAAO,OAAQuE,OAAQ,SAIpCvH,cAAA,OAAKsH,MAAO,CAACtE,MAAO,OAAQuE,OAAQ,mBAUzC,G,iBCvQckC,EAbO,SAAHpE,GAAuD,IAADqE,EAAArE,EAAhDrC,aAAK,IAAA0G,EAAG,GAAEA,EAAAC,EAAAtE,EAAEkC,cAAM,IAAAoC,EAAG,GAAEA,EAAAC,EAAAvE,EAAEwE,YAAI,IAAAD,EAAG,UAASA,EACjE,OACC5J,cAAA,OAAKgD,MAAOA,EAAOuE,OAAQA,EAAQuC,QAAQ,YAAYD,KAAK,OAAOE,MAAM,6BAA4BtC,SACpGzH,cAAA,QACCgK,EAAE,qqDACFC,OAAQJ,EACRK,YAAY,OAKhB,EC4FeC,EAhGE,WAChB,IAAMC,EAAWC,cAEjBlH,EAAgCC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAApCmH,EAAQjH,EAAA,GAAEsB,EAAWtB,EAAA,GAC5BG,EAA8BJ,mBAAS,MAAKK,EAAAH,YAAAE,EAAA,GAArC+G,EAAO9G,EAAA,GAAE+G,EAAU/G,EAAA,GAC1BE,EAAsBP,oBAAS,GAAMQ,EAAAN,YAAAK,EAAA,GAA9B8G,EAAI7G,EAAA,GAAE8G,EAAK9G,EAAA,GAElB6B,QAAQC,IAAI+E,GAGZvF,qBAAU,WACT,GAAKuF,EAAL,CAEA,IAAME,EAAUC,YAAW,WAE1BC,OAAOC,SAASC,QAAQ,8BACzB,GAAG,KAIH,OAFAL,GAAM,GAEC,kBAAMM,aAAaL,EAAS,CATlB,CAUlB,GAAG,CAACF,IAEJ,IAAMQ,EAAQ,CAOb,CACCC,GAAI,EACJC,KAAM,eAACtB,EAAI3I,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAG,UAAS,OAAKlB,cAACoL,EAAS,CAACvB,KAAMA,GAAQ,EACrDwB,KAAM,MAwBR,OACCrL,cAAA,OAAKC,UAAWC,IAAOC,OAAOsH,SAC7BzH,cAAA,OAAKC,UAAS,GAAAgF,OAAK/E,IAAOoL,QAAS7D,SAYjCwD,EAAMrF,KAAI,SAAAP,EAAWkG,GAAW,IAAnBJ,EAAI9F,EAAJ8F,KAKPK,EAJalB,IAAaiB,GACdhB,IAAYgB,EAGD,UAAY,UAEzC,OACCvL,cAACyL,IAAU,CAEVxL,UAAWC,IAAOwL,MAClBC,aAAc,kBA9BM,SAACJ,GAE1Bf,EADqBF,IAAaiB,EAAQ,KAAOA,EAElD,CA2B0BK,CAAkBL,EAAM,EAC5CM,aAAc,kBAAMrB,EAAW,KAAK,EACpCpB,QAAS,kBA1CY,SAACmC,GAC3B,IAAMO,EAAYxB,IAAaiB,EAAQ,KAAOA,EACxCQ,EAAWd,EAAMM,GAAOF,KAE9BjB,EAAS2B,GACTpH,EAAYmH,GAEE,IAAVP,GAAab,GAAM,EACxB,CAkCqBsB,CAAmBT,EAAM,EAAC9D,SAExC0D,EAAKK,IAAM,oBAAAvG,OANasG,GAS5B,OAKJ,EC5EexD,MApBf,WACC,OACC/H,cAAA,OAAKsH,MAAO,CAACC,OAAQ,QAASvE,MAAO,SAASyE,SAC7CJ,eAAC4E,IAAa,CAAAxE,SAAA,CACbzH,cAACmK,EAAQ,IAET9C,eAAC6E,IAAM,CAAAzE,SAAA,CACNzH,cAACmM,IAAK,CAACd,KAAK,IAAIe,QAASpM,cAACqM,EAAQ,MAGlCrM,cAACmM,IAAK,CAACd,KAAK,IAAIe,QAASpM,cAACsM,IAAQ,CAACC,GAAG,eAQ3C,ECbeC,EAZS,SAAAC,GACnBA,GAAeA,aAAuBC,UACzC,8BAAqBtH,MAAK,SAAAC,GAAkD,IAA/CsH,EAAMtH,EAANsH,OAAQC,EAAMvH,EAANuH,OAAQC,EAAMxH,EAANwH,OAAQC,EAAMzH,EAANyH,OAAQC,EAAO1H,EAAP0H,QAC5DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEF,ECeAO,IAASC,OACRjN,cAACkN,IAAMC,WAAU,CAAA1F,SAChBzH,cAAC+H,EAAG,MAELqF,SAASC,eAAe,SAKzBb,G,qBCjCA3M,EAAOC,QAAU,CAAC,OAAS,6BAA6B,OAAS,6BAA6B,YAAc,kCAAkC,WAAa,iCAAiC,OAAS,6BAA6B,OAAS,6B,qBCA3OD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,OAAS,yBAAyB,MAAQ,wB,qBCA9FD,EAAOC,QAAU,CAAC,IAAM,sBAAsB,SAAW,2B","file":"static/js/main.0f4afcec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent\":\"Header_parent__Glv7E\",\"text\":\"Header_text__Ev8vL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent\":\"TopLeftCard_parent__2D4Zt\",\"header\":\"TopLeftCard_header__4Njoy\",\"bottomText\":\"TopLeftCard_bottomText__3232U\",\"center\":\"TopLeftCard_center__72UAz\",\"bottom\":\"TopLeftCard_bottom__2GR_1\"};","import React from 'react';\r\nimport styles from './Header.module.scss';\r\n\r\nconst Header = () => {\r\n\t// const navigate = useNavigate();\r\n\t//\r\n\t// const [selected, setSelected] = useState(1);\r\n\t// const [hovered, setHovered] = useState(null);\r\n\t//\r\n\t// const icons = [\r\n\t// \t{\r\n\t// \t\tid: 0,\r\n\t// \t\ticon: (fill = '#B1B5C5') => <SettingsIcon fill={fill} />,\r\n\t// \t\tpath: '/settings',\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tid: 1,\r\n\t// \t\ticon: (fill = '#B1B5C5') => <Dashboard fill={fill} />,\r\n\t// \t\tpath: '/',\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\tid: 2,\r\n\t// \t\ticon: (fill = '#B1B5C5') => <InfoIcon fill={fill} />,\r\n\t// \t\tpath: '/info',\r\n\t// \t},\r\n\t// ];\r\n\t//\r\n\t// const handleSelectedItem = (index) => {\r\n\t// \tconst tSelected = selected === index ? null : index;\r\n\t// \tconst pathName = icons[index].path;\r\n\t//\r\n\t// \tnavigate(pathName);\r\n\t// \tsetSelected(tSelected);\r\n\t// };\r\n\t//\r\n\t// const handleHoveredItem = (index) => {\r\n\t// \tconst hoveredIndex = selected === index ? null : index;\r\n\t// \tsetHovered(hoveredIndex);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<div className={styles.parent}>\r\n\r\n\t\t\t{/*<div className={styles.text}>*/}\r\n\t\t\t{/*\t{'Дашборд > Все камеры'}*/}\r\n\t\t\t{/*</div>*/}\r\n\t\t\t\r\n\t\t\t{/*<div className={styles.content}>*/}\r\n\t\t\t\r\n\t\t\t{/*\t<div className={`${styles.bricks}`}>*/}\r\n\t\t\t{/*\t\t/!*{icons.map(({ icon }, index) => {*!/*/}\r\n\t\t\t{/*\t\t/!*\tconst isSelected = selected === index;*!/*/}\r\n\t\t\t{/*\t\t/!*\tconst isHovered = hovered === index;*!/*/}\r\n\t\t\t{/*\t\t/!*\tconst isActiveItem = isSelected || isHovered;*!/*/}\r\n\r\n\t\t\t{/*\t\t/!*\tconst color = isActiveItem ? '#1970A9' : '#B1B5C5';*!/*/}\r\n\r\n\t\t\t{/*\t\t/!*\treturn (*!/*/}\r\n\t\t\t{/*\t\t/!*\t\t<IconButton*!/*/}\r\n\t\t\t{/*\t\t/!*\t\t\tkey={`ControlIcon-Icon-${index}`}*!/*/}\r\n\t\t\t{/*\t\t/!*\t\t\tclassName={styles.brick}*!/*/}\r\n\t\t\t{/*\t\t/!*\t\t\tonMouseEnter={() => handleHoveredItem(index)}*!/*/}\r\n\t\t\t{/*\t\t/!*\t\t\tonMouseLeave={() => setHovered(null)}*!/*/}\r\n\t\t\t{/*\t\t/!*\t\t\tonClick={() => handleSelectedItem(index)}*!/*/}\r\n\t\t\t{/*\t\t/!*\t\t>*!/*/}\r\n\t\t\t{/*\t\t/!*\t\t\t{icon(color)}*!/*/}\r\n\t\t\t{/*\t\t/!*\t\t</IconButton>*!/*/}\r\n\t\t\t{/*\t\t/!*\t);*!/*/}\r\n\t\t\t{/*\t\t/!*})}*!/*/}\r\n\r\n\t\t\t{/*\t</div>*/}\r\n\t\t\t{/*</div>*/}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","export const apiPost = async (url = '', parameters = {}) => {\r\n\tconst serverData = {\r\n\t\tans: { status: null, statusText: '' },\r\n\t\terror: { isError: false, errorText: '' },\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAccept: 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(parameters),\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst answer = await fetch(url, options);\r\n\r\n\t\tconst { status, statusText } = answer;\r\n\t\tconst { ans } = serverData;\r\n\t\tserverData.ans = { ...ans, status, statusText };\r\n\r\n\t} catch (error) {\r\n\t\tserverData.error = { isError: true, errorText: error.message };\r\n\t}\r\n\r\n\treturn serverData;\r\n};\r\n\r\nexport const apiAuthPost = async (url = '', values) => {\r\n\tconst serverData = {\r\n\t\tans: { status: null, statusText: ''},\r\n\t\terror: { isError: false, errorText: '' },\r\n\t\tdata: [],\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify(values),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t};\r\n\t\tconst userData = await fetch(url, options);\r\n\r\n\t\tserverData.data = await userData.json();\r\n\t} catch (error) {\r\n\t\tserverData.error.isError = true;\r\n\t\tserverData.error.errorText = error;\r\n\t}\r\n\r\n\treturn serverData;\r\n};\r\nexport const apiMainGet = async (url = '') => {\r\n\tconst serverData = {\r\n\t\tans: { status: null, statusText: '' },\r\n\t\terror: { isError: false, errorText: '' },\r\n\t\tdata: [],\r\n\t};\r\n\t// const token = authState.token;\r\n\r\n\tconst options = {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAccept: 'application/json',\r\n\t\t},\r\n\t\tmode: 'cors',\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst answer = await fetch(url, options);\r\n\r\n\t\tconst { status, statusText } = answer;\r\n\t\tconst { ans } = serverData;\r\n\r\n\t\tserverData.ans = { ...ans, status, statusText };\r\n\r\n\t\tserverData.data = await answer.json();\r\n\t} catch (error) {\r\n\t\tserverData.error = { isError: true, errorText: error.message };\r\n\t}\r\n\r\n\treturn serverData;\r\n};\r\n\r\n\r\nexport const apiMainPatch = async (url = '', parameters = {}) => {\r\n\tconst serverData = {\r\n\t\tans: { status: null, statusText: '' },\r\n\t\terror: { isError: false, errorText: '' },\r\n\t\tdata: {},\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tmethod: 'PATCH',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(parameters),\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst answer = await fetch(url, options);\r\n\r\n\t\tconst { status, statusText } = answer;\r\n\t\tconst { ans } = serverData;\r\n\t\tserverData.ans = { ...ans, status, statusText };\r\n\r\n\t\tserverData.data = await answer.json();\r\n\t} catch (error) {\r\n\t\tserverData.error = { isError: true, errorText: error.message };\r\n\t}\r\n\r\n\treturn serverData;\r\n};\r\n","import {useState, useEffect, useRef} from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport {createTheme, styled, ThemeProvider} from '@mui/material';\r\nimport { DataGrid, ruRU } from '@mui/x-data-grid';\r\nimport TopRigthCard from '../components/TopRigthCard/TopRigthCard';\r\nimport TopLeftCard from '../components/TopLeftCard/TopLeftCard';\r\n// import BottomRightCard from '../components/BottomRigthCard/BottomRigthCard';\r\nimport styles from './TestPage.module.scss';\r\nimport {apiMainGet} from '../api/api';\r\nimport { ReactMic } from 'react-mic';\r\n\r\nconst defEvent = {\r\n\t'id': 1,\r\n\t'input_datetime': '2023-10-14T17:05:16.613423',\r\n\t'input_photo': null,\r\n\t'recognized_datetime': null,\r\n\t'recognized_photo': null,\r\n\t'is_analyzed': false,\r\n\t'filename': null,\r\n\t'type': 0,\r\n\t'number': '',\r\n\t'is_correct': 0,\r\n\t'coordinates': {\r\n\t\t'x': 0,\r\n\t\t'y': 0,\r\n\t\t'width': 0,\r\n\t\t'height': 0\r\n\t},\r\n\t'recogn_percent': 0.0,\r\n\t'analytic_json_numbers': [[1,49],[1,20],[1,99],[1,99],[1,99],[1,63],[1,99],[1,99]],\r\n\t'camera': 'Тест камера',\r\n\t'place': 'Тест объект',\r\n\t'notification': '',\r\n\t'workload': 0\r\n};\r\n\r\nconst darkTheme = createTheme({\r\n\tpalette: {\r\n\t\tmode: 'dark',\r\n\t},\r\n});\r\n\r\nconst StyledDataGrid = styled(DataGrid)(() => ({\r\n\t'& ::-webkit-scrollbar': {\r\n\t\twidth: '6px'\r\n\t},\r\n\t'& ::-webkit-scrollbar-thumb': {\r\n\t\tbackgroundColor: '#ccc',\r\n\t\tborderRadius: '3px',\r\n\t}\r\n}));\r\n\r\nconst columnsFull = [\r\n\t{ field: 'id', headerName: 'ID', width: 70 },\r\n\t{ field: 'rightDateTime', headerName: 'Дата', flex: 1 },\r\n\t{ field: 'number', headerName: 'Номер вагона', flex: 1 },\r\n\t{ field: 'recogn_percent', headerName: 'Точность', flex: 1 },\r\n\t{ field: 'notification', headerName: 'Состояние', flex: 1 },\r\n\t{ field: 'place', headerName: 'Место', flex: 1 },\r\n];\r\n\r\nexport default () => {\r\n\tconst [dataEvents, setDataEvents] = useState([]);\r\n\tconst [countRows, setCountRows] = useState(0);\r\n\tconst [prevLink, setPrevLink] = useState('');\r\n\tconst [nextLink, setNextLink] = useState('');\r\n\tconst [currentLink, setCurrentLink] = useState('');\r\n\tconst [isLoad, setIsLoad] = useState(false);\r\n\tconst [pageCounter, setPageCounter] = useState(0);\r\n\tconst [selected, setSelected] = useState(defEvent);\r\n\tconst [reloadPage, setReloadPage] = useState(false);\r\n\r\n\tconst serverPath = '77.223.96.53';\r\n\t// const localPath = window.location.host;\r\n\r\n\tconst getLink = `http://${serverPath}/api/v1/events/`;\r\n\t// const getLink = `http://${localPath}/api/v1/events/`;\r\n\r\n\tuseEffect(() => {\r\n\t\tgetEvents(getLink);\r\n\r\n\t\tsetIsLoad(true);\r\n\t\tsetReloadPage(false);\r\n\t}, [reloadPage]);\r\n\r\n\tconst getEvents = (url = '') => {\r\n\t\tapiMainGet(url).then(({ data, error }) => {\r\n\t\t\tif (error.isError) return;\r\n\r\n\t\t\tconst { next, count, previous, results } = data;\r\n\r\n\t\t\tconsole.log(results);\r\n\t\t\tconst newData = results.map(item => {\r\n\t\t\t\tconst { input_datetime } = item;\r\n\t\t\t\tconst dataTime = input_datetime.split('T');\r\n\t\t\t\tconst firstDate = new Date(dataTime[0]);\r\n\t\t\t\tconst date = `${firstDate.toLocaleDateString()} ${dataTime[1].slice(0, 5)}`;\r\n\t\t\t\treturn ({ ...item, rightDateTime: date });\r\n\t\t\t});\r\n\r\n\t\t\tsetDataEvents(newData);\r\n\t\t\tsetCountRows(count);\r\n\t\t\tsetPrevLink(previous);\r\n\t\t\tsetNextLink(next);\r\n\r\n\t\t\tsetIsLoad(false);\r\n\t\t\tsetCurrentLink(url);\r\n\t\t\tsetSelected(newData[0]);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangePage = (infoPage) => {\r\n\t\tlet linkMove = pageCounter < infoPage.page ? nextLink : prevLink;\r\n\r\n\t\tif (!linkMove) {\r\n\t\t\tlinkMove = currentLink;\r\n\t\t}\r\n\r\n\t\tconst urlParts = linkMove.split('?');\r\n\t\tlet updatelink = linkMove;\r\n\r\n\t\tconst queryParams = new URLSearchParams(urlParts[1]);\r\n\t\tqueryParams.set('page_size', infoPage.pageSize.toString());\r\n\r\n\t\tupdatelink = `${urlParts[0]}?${queryParams.toString()}`;\r\n\r\n\t\tgetEvents(updatelink);\r\n\r\n\t\tsetIsLoad(true);\r\n\t\tsetPageCounter(infoPage.page);\r\n\t};\r\n\r\n\tconst handleSelectRow = (row) => {\r\n\t\tsetSelected(row.row);\r\n\t};\r\n\r\n\tconst audioRef = useRef();\r\n\tconst nameRef = useRef();\r\n\r\n\tconst handleFormSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\t// Здесь вы можете реализовать отправку данных на сервер.\r\n\t\t// Для отправки файла вы можете использовать объект FormData.\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('audio', audioRef.current.files[0]);\r\n\t\tformData.append('name', nameRef.current.value);\r\n\r\n\t\t// Заглушка для отправки данных на сервер\r\n\t\tconsole.log(formData);\r\n\r\n\t\t// fetch('/your-api-endpoint', {\r\n\t\t//   method: 'POST',\r\n\t\t//   body: formData,\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => console.log(data))\r\n\t\t// .catch((error) => console.error('Error:', error));\r\n\t};\r\n\r\n\r\n\tconst [recordedData, setRecordedData] = useState(null);\r\n\tconst [recordStart, setRecordStart] = useState(false);\r\n\r\n\tconst handleData = (recordedBlob) => {\r\n\t\tconsole.log('chunk of real-time data is: ', recordedBlob);\r\n\t};\r\n\r\n\tconst handleStart = () => {\r\n\t\tconsole.log('Recording started');\r\n\t\tsetRecordStart(true);\r\n\t};\r\n\r\n\tconst handleStop = (recordedBlob) => {\r\n\t\tconsole.log('Recording stopped');\r\n\t\tsetRecordStart(false);\r\n\t\tsetRecordedData(recordedBlob.blob);\r\n\t};\r\n\r\n\tconst handleSend = () => {\r\n\t\tconsole.log(recordedData);\r\n\t\t// if (recordedData) {\r\n\t\t// \tconst formData = new FormData();\r\n\t\t// \tformData.append('audio', recordedData, 'recording.wav');\r\n\t\t//\r\n\t\t// \tfetch('your-api-endpoint', {\r\n\t\t// \t\tmethod: 'POST',\r\n\t\t// \t\tbody: formData\r\n\t\t// \t})\r\n\t\t// \t\t.then(response => response.json())\r\n\t\t// \t\t.then(data => {\r\n\t\t// \t\t\tconsole.log('API response:', data);\r\n\t\t// \t\t\t// Handle the response as needed\r\n\t\t// \t\t})\r\n\t\t// \t\t.catch(error => {\r\n\t\t// \t\t\tconsole.error('Error:', error);\r\n\t\t// \t\t});\r\n\t\t// }\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={{ backgroundColor: '#202125', height: '100%', width: 'calc(100% - 70px)', marginLeft: 70 }}>\r\n\t\t\t<Header />\r\n\r\n\t\t\t<div style={{width: 'calc(100% - 0px)', height: 'calc(100% - 80px)', display: 'flex'}}>\r\n\t\t\t\t<ThemeProvider theme={darkTheme}>\r\n\t\t\t\t\t<div style={{width: '65%', height: '100%', display: 'flex', flexDirection: 'column'}}>\r\n\t\t\t\t\t\t<div style={{width: '100%', height: '55%', borderRight: '1px solid #404249'}}>\r\n\t\t\t\t\t\t\t{/*<TopLeftCard row={selected}/>*/}\r\n\r\n\r\n\t\t\t\t\t\t\t<div className={styles.App}>\r\n\t\t\t\t\t\t\t\t<form onSubmit={handleFormSubmit}>\r\n\t\t\t\t\t\t\t\t\t<input ref={nameRef} type=\"text\" name=\"name\" placeholder=\"Your Name\" required />\r\n\t\t\t\t\t\t\t\t\t<input ref={audioRef} type=\"file\" name=\"audio\" accept=\"audio/*\" required />\r\n\t\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Submit\" />\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className={styles.ReactMic} style={{width: '100%', height: '45%'}}>\r\n\r\n\t\t\t\t\t\t\t<ReactMic\r\n\t\t\t\t\t\t\t\trecord={recordStart}\r\n\t\t\t\t\t\t\t\tonStop={handleStop}\r\n\t\t\t\t\t\t\t\tonData={handleData}\r\n\t\t\t\t\t\t\t\tstrokeColor=\"#FFFFFF\"\r\n\t\t\t\t\t\t\t\tbackgroundColor=\"#202125\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button onClick={handleStart}>Start Recording</button>\r\n\t\t\t\t\t\t\t<button onClick={handleStop}>Stop Recording</button>\r\n\t\t\t\t\t\t\t<button onClick={handleSend}>Send Audio</button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t{recordedData && (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<audio controls src={URL.createObjectURL(recordedData)} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{/*<StyledDataGrid*/}\r\n\t\t\t\t\t\t\t{/*\tstyle={{color: '#B1B5C5', borderRight: 'none', borderRadius: 0}}*/}\r\n\t\t\t\t\t\t\t{/*\trows={dataEvents}*/}\r\n\t\t\t\t\t\t\t{/*\tcolumns={columnsFull}*/}\r\n\t\t\t\t\t\t\t{/*\tloading={isLoad}*/}\r\n\t\t\t\t\t\t\t{/*\tpaginationMode={'server'}*/}\r\n\t\t\t\t\t\t\t{/*\trowCount={countRows}*/}\r\n\t\t\t\t\t\t\t{/*\tdisableColumnFilter*/}\r\n\t\t\t\t\t\t\t{/*\tinitialState={{*/}\r\n\t\t\t\t\t\t\t{/*\t\tpagination: {*/}\r\n\t\t\t\t\t\t\t{/*\t\t\tpaginationModel: { pageSize: 10 },*/}\r\n\t\t\t\t\t\t\t{/*\t\t},*/}\r\n\t\t\t\t\t\t\t{/*\t}}*/}\r\n\t\t\t\t\t\t\t{/*\tpageSizeOptions={[10]}*/}\r\n\t\t\t\t\t\t\t{/*\thideFooterSelectedRowCount={true}*/}\r\n\t\t\t\t\t\t\t{/*\tonRowClick={handleSelectRow}*/}\r\n\t\t\t\t\t\t\t{/*\tonPaginationModelChange={handleChangePage}*/}\r\n\t\t\t\t\t\t\t{/*\tlocaleText={ruRU.components.MuiDataGrid.defaultProps.localeText}*/}\r\n\t\t\t\t\t\t\t{/*/>*/}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{width: '35%', height: '100%', display: 'flex', flexDirection: 'column'}}>\r\n\t\t\t\t\t\t<div style={{width: '100%', height: '55%'}}>\r\n\t\t\t\t\t\t\t{/*<TopRigthCard getLink={getLink} row={selected} setReloadPage={setReloadPage}/>*/}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div style={{width: '100%', height: '45%'}}>\r\n\r\n\r\n\t\t\t\t\t\t\t{/*<BottomRightCard getLink={getLink} number={selected.number}/>*/}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};","import React from 'react';\r\n\r\nconst DashboardIcon = ({ width = 49, height = 49, fill = '#B1B5C5' }) => {\r\n\treturn (\r\n\t\t<svg width={width} height={height} viewBox='0 0 49 49' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n\t\t\t<path\r\n\t\t\t\td=\"M8.1665 10.2087C8.1665 9.66718 8.38161 9.14787 8.76449 8.76498C9.14738 8.3821 9.66669 8.16699 10.2082 8.16699H18.3748C18.9163 8.16699 19.4356 8.3821 19.8185 8.76498C20.2014 9.14787 20.4165 9.66718 20.4165 10.2087V20.417C20.4165 20.9585 20.2014 21.4778 19.8185 21.8607C19.4356 22.2436 18.9163 22.4587 18.3748 22.4587H10.2082C9.66669 22.4587 9.14738 22.2436 8.76449 21.8607C8.38161 21.4778 8.1665 20.9585 8.1665 20.417V10.2087ZM28.5832 10.2087C28.5832 9.66718 28.7983 9.14787 29.1812 8.76498C29.564 8.3821 30.0834 8.16699 30.6248 8.16699H38.7915C39.333 8.16699 39.8523 8.3821 40.2352 8.76498C40.6181 9.14787 40.8332 9.66718 40.8332 10.2087V14.292C40.8332 14.8335 40.6181 15.3528 40.2352 15.7357C39.8523 16.1186 39.333 16.3337 38.7915 16.3337H30.6248C30.0834 16.3337 29.564 16.1186 29.1812 15.7357C28.7983 15.3528 28.5832 14.8335 28.5832 14.292V10.2087ZM8.1665 32.667C8.1665 32.1255 8.38161 31.6062 8.76449 31.2233C9.14738 30.8404 9.66669 30.6253 10.2082 30.6253H18.3748C18.9163 30.6253 19.4356 30.8404 19.8185 31.2233C20.2014 31.6062 20.4165 32.1255 20.4165 32.667V38.792C20.4165 39.3335 20.2014 39.8528 19.8185 40.2357C19.4356 40.6186 18.9163 40.8337 18.3748 40.8337H10.2082C9.66669 40.8337 9.14738 40.6186 8.76449 40.2357C8.38161 39.8528 8.1665 39.3335 8.1665 38.792V32.667ZM28.5832 26.542C28.5832 26.0005 28.7983 25.4812 29.1812 25.0983C29.564 24.7154 30.0834 24.5003 30.6248 24.5003H38.7915C39.333 24.5003 39.8523 24.7154 40.2352 25.0983C40.6181 25.4812 40.8332 26.0005 40.8332 26.542V38.792C40.8332 39.3335 40.6181 39.8528 40.2352 40.2357C39.8523 40.6186 39.333 40.8337 38.7915 40.8337H30.6248C30.0834 40.8337 29.564 40.6186 29.1812 40.2357C28.7983 39.8528 28.5832 39.3335 28.5832 38.792V26.542Z\"\r\n\t\t\t\tstroke={fill}\r\n\t\t\t\tstrokeWidth=\"3\"\r\n\t\t\t/>\r\n\t\t</svg>\r\n\r\n\t);\r\n};\r\n\r\nexport default DashboardIcon;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './LeftMenu.module.scss';\r\n// import InfoIcon from '../../assets/icons/InfoIcon';\r\nimport Dashboard from '../../assets/icons/DashboardIcon';\r\n// import SettingsIcon from '../../assets/icons/SettingsIcon';\r\nimport TgIcon from '../../assets/icons/TgIcon';\r\nimport {IconButton} from '@mui/material';\r\n\r\nconst LeftMenu = () => {\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst [selected, setSelected] = useState(1);\r\n\tconst [hovered, setHovered] = useState(null);\r\n\tconst [isTG, setTG] = useState(false);\r\n\r\n\tconsole.log(isTG);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isTG) return;\r\n\r\n\t\tconst timeout = setTimeout(() => {\r\n\t\t\t// 👇️ redirects to an external URL\r\n\t\t\twindow.location.replace('https://t.me/RECVNBOT/start');\r\n\t\t}, 1000);\r\n\r\n\t\tsetTG(false);\r\n\r\n\t\treturn () => clearTimeout(timeout);\r\n\t}, [isTG]);\r\n\r\n\tconst icons = [\r\n\t\t// {\r\n\t\t// \tid: 0,\r\n\t\t// \ticon: (fill = '#B1B5C5') => <TgIcon fill={fill} />,\r\n\t\t// \t// path: 'https://t.me/RECVNBOT/start',\r\n\t\t// \tpath: '/',\r\n\t\t// },\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\ticon: (fill = '#B1B5C5') => <Dashboard fill={fill} />,\r\n\t\t\tpath: '/',\r\n\t\t},\r\n\t\t// {\r\n\t\t// \tid: 2,\r\n\t\t// \ticon: (fill = '#B1B5C5') => <InfoIcon fill={fill} />,\r\n\t\t// \tpath: '/info',\r\n\t\t// },\r\n\t];\r\n\r\n\tconst handleSelectedItem = (index) => {\r\n\t\tconst tSelected = selected === index ? null : index;\r\n\t\tconst pathName = icons[index].path;\r\n\r\n\t\tnavigate(pathName);\r\n\t\tsetSelected(tSelected);\r\n\r\n\t\tif (index === 0) setTG(true);\r\n\t};\r\n\r\n\tconst handleHoveredItem = (index) => {\r\n\t\tconst hoveredIndex = selected === index ? null : index;\r\n\t\tsetHovered(hoveredIndex);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.parent}>\r\n\t\t\t<div className={`${styles.bricks}`}>\r\n\t\t\t\t{/*<a href=\"https://t.me/RECVNBOT\" target=\"_blank\" rel=\"noopener noreferrer\">*/}\r\n\t\t\t\t{/*\t<IconButton*/}\r\n\t\t\t\t{/*\t\tclassName={styles.brick}*/}\r\n\t\t\t\t{/*\t\tonMouseEnter={() => handleHoveredItem(0)}*/}\r\n\t\t\t\t{/*\t\tonMouseLeave={() => setHovered(null)}*/}\r\n\t\t\t\t{/*\t\tonClick={() => handleSelectedItem(0)}*/}\r\n\t\t\t\t{/*\t>*/}\r\n\t\t\t\t{/*\t\t<TgIcon />*/}\r\n\t\t\t\t{/*\t</IconButton>*/}\r\n\t\t\t\t{/*</a>*/}\r\n\r\n\t\t\t\t{icons.map(({ icon }, index) => {\r\n\t\t\t\t\tconst isSelected = selected === index;\r\n\t\t\t\t\tconst isHovered = hovered === index;\r\n\t\t\t\t\tconst isActiveItem = isSelected || isHovered;\r\n\r\n\t\t\t\t\tconst color = isActiveItem ? '#1970A9' : '#B1B5C5';\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tkey={`ControlIcon-Icon-${index}`}\r\n\t\t\t\t\t\t\tclassName={styles.brick}\r\n\t\t\t\t\t\t\tonMouseEnter={() => handleHoveredItem(index)}\r\n\t\t\t\t\t\t\tonMouseLeave={() => setHovered(null)}\r\n\t\t\t\t\t\t\tonClick={() => handleSelectedItem(index)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{icon(color)}\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LeftMenu;\r\n","import './App.css';\r\nimport {BrowserRouter, Routes, Route, Navigate} from 'react-router-dom';\r\nimport TestPage from './pages/TestPage';\r\n// import InfoPage from './pages/InfoPage';\r\n// import SettingsPage from './pages/SettingsPage';\r\nimport LeftMenu from './components/LeftMenu/LeftMenu';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div style={{height: '100vh', width: '100vw'}}>\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<LeftMenu />\r\n\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route path='/' element={<TestPage />} />\r\n\t\t\t\t\t{/*<Route path='/info' element={<InfoPage />} />*/}\r\n\t\t\t\t\t{/*<Route path='/settings' element={<SettingsPage />} />*/}\r\n\t\t\t\t\t<Route path='*' element={<Navigate to='/' />} />\r\n\t\t\t\t\t{/*<Route path='/tg' component={() => {*/}\r\n\t\t\t\t\t{/*\twindow.location.href = 'https://t.me/RECVNBOT/start';*/}\r\n\t\t\t\t\t{/*}} />*/}\r\n\t\t\t\t</Routes>\r\n\t\t\t</BrowserRouter>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry);\r\n\t\t\tgetFID(onPerfEntry);\r\n\t\t\tgetFCP(onPerfEntry);\r\n\t\t\tgetLCP(onPerfEntry);\r\n\t\t\tgetTTFB(onPerfEntry);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// // import ReactDOM from 'react-dom/client';\r\n// import './index.css';\r\n// import App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n//\r\n// const root = ReactDOM.createRoot(document.getElementById('root'));\r\n// root.render(\r\n// \t<React.StrictMode>\r\n// \t\t<App />\r\n// \t</React.StrictMode>\r\n// );\r\n//\r\n// // If you want to start measuring performance in your app, pass a function\r\n// // to log results (for example: reportWebVitals(console.log))\r\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent\":\"TopRigthCard_parent__y46Cb\",\"header\":\"TopRigthCard_header__i-HAT\",\"searchInput\":\"TopRigthCard_searchInput__3iHPV\",\"bottomText\":\"TopRigthCard_bottomText__2HSSG\",\"center\":\"TopRigthCard_center__158bf\",\"bottom\":\"TopRigthCard_bottom__8x1H3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent\":\"LeftMenu_parent__1Q8F_\",\"bricks\":\"LeftMenu_bricks__1q_SU\",\"brick\":\"LeftMenu_brick__WIAjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"TestPage_App__5VItB\",\"ReactMic\":\"TestPage_ReactMic__2zxtv\"};"],"sourceRoot":""}